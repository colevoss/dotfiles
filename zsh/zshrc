# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# ZSH_THEME="dracula"

COMPLETION_WAITING_DOTS="true"

plugins=(git zsh-syntax-highlighting zsh-autosuggestions kubectl)

source $ZSH/oh-my-zsh.sh

# User configuration

# Preferred editor for local and remote sessions
export EDITOR='mvim'

DOTFILES="$HOME/dotfiles"

# Source environemtn variables from each file
# in $DOTFILES/vars that has a .vars.sh file name
for file in $DOTFILES/zsh/vars/**/*.vars.sh; do
  source ${file}
done

# Source aliases from each file
# in $DOTFILES/aliases that has a .alias.sh file name
for file in $DOTFILES/zsh/aliases/**/*.alias.sh; do
  source ${file}
done

alias reloadzsh="source $HOME/.zshrc"

# ###########################
# Set up NVM
# ###########################
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

eval "$(starship init zsh)"
# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/cvoss/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/cvoss/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/cvoss/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/cvoss/google-cloud-sdk/completion.zsh.inc'; fi

autoload -U add-zsh-hook

load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}

add-zsh-hook chpwd load-nvmrc
load-nvmrc

eval "$(starship init zsh)"
